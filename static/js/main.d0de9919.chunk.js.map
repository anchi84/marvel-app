{"version":3,"sources":["components/Header.js","components/Footer.js","components/Character.js","components/Characters.js","views/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","React","Component","Footer","Date","getFullYear","Character","props","updateBookmarkedCharacters","event","character","setState","bookmarked","state","setTimeout","handleChange","bookmarkedSearch","star","this","name","src","thumbnail","path","extension","alt","onClick","id","Characters","characters","map","Home","bookmarkedCharactersString","window","localStorage","getItem","bookmarkedCharacters","JSON","parse","push","i","length","splice","setItem","stringify","updateResults","searchValue","currentTarget","value","ts","Math","random","publicKey","hash","md5","url","fetch","then","response","json","results","data","component","filter","toLowerCase","includes","type","placeholder","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0de9919.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <h1>Marvel characters</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <p>&copy;  Anchi  {new Date().getFullYear()}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nclass Character extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bookmarked: props.bookmarkedSearch\r\n        };\r\n    }\r\n\r\n    updateBookmarkedCharacters = (event, character) => {\r\n        this.setState({ bookmarked: !this.state.bookmarked });\r\n        setTimeout(() => {\r\n            this.props.handleChange(character, this.state.bookmarked);\r\n        }, 0);\r\n    };\r\n\r\n    render() {\r\n        const { character } = this.props;\r\n        let star;\r\n\r\n        if (this.state.bookmarked) {\r\n            star = <span className=\"star\">&#9733;</span>\r\n        } else {\r\n            star = <span className=\"star\">&#9734;</span>\r\n        }\r\n\r\n        return (\r\n            <div\r\n                key={character.id}\r\n                className=\"character\"\r\n            >\r\n                <p className=\"name\">{character.name}</p>\r\n                <div className=\"img-wrapper\">\r\n                    <img\r\n                        src={character.thumbnail.path + '.' + character.thumbnail.extension }\r\n                        alt={character.name}\r\n                    />\r\n                </div>\r\n                <div onClick={event => this.updateBookmarkedCharacters(event, character)}>\r\n                    {star}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\nimport Character from \"./Character\";\r\n\r\nclass Characters extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"characters\">\r\n                {\r\n                    this.props.characters.map(character => (\r\n                        <Character\r\n                            character={character}\r\n                            bookmarkedSearch={this.props.bookmarkedSearch}\r\n                            key={character.id}\r\n                            handleChange={this.props.handleChange}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Characters;\r\n","import React from \"react\";\r\nimport md5 from \"md5\"\r\nimport Characters from \"../components/Characters\"\r\n\r\n// const getLocalStorage = () => {\r\n//     const charactersString = window.localStorage.getItem(\"characters\");\r\n//         const initialState = JSON.parse(charactersString);\r\n//         return initialState;\r\n// };\r\n\r\nclass Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            characters: [],\r\n            bookmarkedCharacters: [],\r\n            searchValue: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const bookmarkedCharactersString = window.localStorage.getItem(\"bookmarkedCharacters\");\r\n        const bookmarkedCharacters = bookmarkedCharactersString ? JSON.parse(bookmarkedCharactersString) : [];\r\n        this.setState({ bookmarkedCharacters });\r\n\r\n        const base_url ='https://gateway.marvel.com/v1/public/characters';\r\n        const ts = 'ts' + Math.random() * 10;\r\n        const publicKey = '263d98587f9be29f411909cd3287e8de';\r\n        const privateKey = '0a3a8637f82b31da552186601bcae2ae88340ba2';\r\n        const hash = md5(ts + privateKey + publicKey);\r\n        const url = `${base_url}?ts=${ts}&apikey=${publicKey}&hash=${hash}`;\r\n\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(results => {\r\n                this.setState({ characters: results.data.results });\r\n            });\r\n    }\r\n\r\n\r\n    handleChange = (character, bookmarked) => {\r\n        const bookmarkedCharactersString = window.localStorage.getItem(\"bookmarkedCharacters\");\r\n        const bookmarkedCharacters = bookmarkedCharactersString ? JSON.parse(bookmarkedCharactersString) : [];\r\n        \r\n        if (bookmarked) {\r\n            bookmarkedCharacters.push(character);\r\n        } else if (\"bookmarkedCharacters\" in localStorage) {\r\n            for (let i = 0; i <  bookmarkedCharacters.length; i++) {\r\n                if (bookmarkedCharacters[i].id === character.id) {\r\n                    bookmarkedCharacters.splice(i, 1);\r\n                }\r\n            }\r\n        }\r\n\r\n        window.localStorage.setItem(\"bookmarkedCharacters\", JSON.stringify(bookmarkedCharacters));\r\n        this.setState({ bookmarkedCharacters });\r\n    };\r\n\r\n    updateResults = event => {\r\n        this.setState({ searchValue: event.currentTarget.value });\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            characters,\r\n            bookmarkedCharacters,\r\n            searchValue\r\n         } = this.state;\r\n\r\n        let component;\r\n\r\n        if (searchValue && characters.filter(character => character.name.toLowerCase().includes(searchValue)).length === 0) {\r\n            component = <div className=\"no-results\">No heroes found!</div>;\r\n        } else if (searchValue) {\r\n            component = \r\n                <Characters\r\n                    characters={characters.filter(character => character.name.toLowerCase().includes(searchValue))}\r\n                    bookmarkedSearch={false}\r\n                    handleChange={this.handleChange}\r\n                />;\r\n        } else if (!searchValue && bookmarkedCharacters.length) {\r\n            component = \r\n                <Characters\r\n                    characters={bookmarkedCharacters}\r\n                    bookmarkedSearch={true}\r\n                    handleChange={this.handleChange}\r\n                />;\r\n        }\r\n\r\n        return (    \r\n            <div>\r\n                <div className=\"search-wrapper\">\r\n                    <input\r\n                        type=\"search\"\r\n                        placeholder=\"Search for your favorite characters...\"\r\n                        onChange={event => this.updateResults(event)}\r\n                    />\r\n                </div>\r\n                {component}\r\n            </div>     \r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import './App.css';\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./views/Home\"\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Header />\n            <Home />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}